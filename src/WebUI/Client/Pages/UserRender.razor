@using System.Collections.Generic
@using blaz.Data
@using System;
@using Microsoft.AspNetCore.Html
@using System.Threading
@using System.Threading.Tasks
@using static SharedFs.SharedTypes;
@using System.Linq
@using WebUI.Data
@inject DataGetter Getter
@inject NavigationManager UriHelper
@using Microsoft.AspNetCore.Components.Web.Virtualization
@code {

    [Parameter]

    public UIData UserData { get; set; }

    [Parameter]

    public int Group { get; set; }

    [Parameter]

    public string UserName { get; set; }





    protected override async Task OnInitializedAsync()

    {



    }

    protected override async Task OnParametersSetAsync()

    {
        // This event will fire when the parameters change

        // Put your code here.
        this.StateHasChanged();

    }

}

@{
    var uiData = Getter.TransClientData[UserName];

    Getter.userUpdates[UserName] = () => { Console.WriteLine($"StateChanged|User|{UserName}"); this.StateHasChanged(); };
    void thing(UIJobInfo[] jobs)
    {  
        var lastID = -1;
        <Virtualize Items="@jobs" OverscanCount="4">
            @{
                var data = UserData.TransferDataList[context.JobID];
            }
            <TransferTaskRender LastID="@lastID" UserName="@UserName" Task="@data"> </TransferTaskRender>
            @{lastID=context.JobID;}
        </Virtualize>
    

    }
}
@if (Group == -1)
{

    thing(UserData.Jobs);

}

else

{

    var jobs = UserData.Jobs.Where(x => x.RequiredTokens.Contains(Group)).ToArray();

    thing(jobs);

}
