@page "/{Name}"
@page "/"
@using System.Collections.Generic
@using blaz.Data
@using System;
@using System.Threading
@using System.Threading.Tasks
@using static SharedFs.SharedTypes;
@using System.Linq
@using HostedBlazor.Data
@inject DataGetter Getter
@inject NavigationManager UriHelper  
@code{
    [Parameter]
    public string Name { get; set; }
protected override async Task OnInitializedAsync()
    {
        Name=Name??"All";
          Getter.newData+=StateHasChanged;
    }
}
@{

}

<h1>Transfer Monitoring</h1>
<p>Connected to transfer server at: @Getter.transferServerUrl</p>

@if (Getter.status==Status.Loading)
{
    <p><em>Loading...</em></p>
}
else if (Getter.status==Status.NoConnection){
<p><em>Connot Connect to server</em></p>
}
else if (Getter.status==Status.DataError){
<p><em>Data recieved is malformed</em></p>
}
else
{
    <table class="table">
        <div>  
            @if(Name=="All"){
                  
                var orderedTasks= Enumerable.Aggregate(
                    Getter.CopyTasks.Values ,
                    new List<TransferData>(),
                    (accum,next)=> accum.Concat(next).ToList()).OrderBy(transData=>transData.StartTime).ToList();        
                <TransferTaskRender groupName="All" copyTasks="@orderedTasks"/>
            }
            else if(Getter.CopyTasks.ContainsKey(Name))
            {
                <TransferTaskRender groupName="@Name" copyTasks="@Getter.CopyTasks[Name]"/>
            } 
            else
            {
                UriHelper.NavigateTo("/All");
            }
            
        </div>
    </table>
}

