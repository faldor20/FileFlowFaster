@using HostedBlazor.Data;
@using blaz.Data;
@inject DataGetter Getter
@inject NavigationManager UriHelper  
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">File Transfer Monitor</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="/All" @onclick='()=>selectedUser="" '>>
                <span class="oi oi-list-rich" aria-hidden="true"></span> All
            </NavLink>
        </li>
       @if(Getter.status==Status.Connected){ 
        @foreach (var user in Getter.CopyTasks)
        {
            string url= "/JobList/"+user.Key+"/-1";

            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@url" @onclick="()=>selectedUser=user.Key">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @user.Key
                </NavLink>
                @if(user.Key==selectedUser){
                    <ul class="nav flex-column">
                        @foreach (var group in user.Value.Mapping)
                        {
                            string userUrl= "/JobList/"+user.Key+"/"+group.Key;
                            <li class="nav-item px-3">
                            <NavLink class="nav-link" href="@userUrl">
                                <span class="oi oi-list-rich" aria-hidden="true"></span> @group.Value
                            </NavLink>
                            </li>
                        }
                    
                    </ul>
                }
            </li>
            
        }}
       @*  <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li> *@
         
    </ul>
</div>

@code {
    private string selectedUser="";
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        //We set the group from the url so that the subnav can be show even when a user hasn't clicked on a group
        selectedUser=UriHelper.Uri.Split('/')[3];
        //TODO: this shoudl really only triger when the sie of the mian dictionary gets longer
        Getter.newData += StateHasChanged;
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
