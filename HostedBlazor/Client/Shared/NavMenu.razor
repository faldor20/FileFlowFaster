@using HostedBlazor.Data;
@using blaz.Data;
@using static SharedFs.SharedTypes;
@inject DataGetter Getter
@inject NavigationManager UriHelper  
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">File Transfer Monitor</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>
@{  void wrap( Dictionary<int ,List<int>>[] heirachy,string userString ,UIData uiData){

        void ListOp (List<int> belowGroups,int currentGroup, int currentIndex){
            string userUrl= "/JobList/"+userString+"/"+currentGroup;
            if(heirachy.Length>currentIndex+1){
                <li class="nav-item px-1">
                <NavLink class="nav-link" href="@userUrl" @onclick="(()=>{selections[currentIndex]=currentGroup; selections[currentIndex+1]=-1;})">
                     @(uiData.Mapping[currentGroup]+">")
                </NavLink>
                </li>
                
            @if( selections[currentIndex]==currentGroup){
                <ul class="nav-list ">
                    @foreach (var group in belowGroups)
                    {
                        ListOp (heirachy[currentIndex+1][group],group, currentIndex+1 );
                    }
                </ul>
                }
            }else{
                <li class="nav-item px-1">
                <NavLink class="nav-link" href="@userUrl">
                   @uiData.Mapping[currentGroup]
                </NavLink>
                </li>
            }
        }
        foreach (var group in heirachy[0])
        {
           ListOp (group.Value,group.Key, 0 );
        }
    }
    
}
<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav-list ">
     @*    <li class="nav-item px-1">
            <NavLink class="nav-link" href="/All" @onclick='()=>selectedUser="" '>
                <span class="oi oi-list-rich" aria-hidden="true"></span> All
            </NavLink>
        </li> *@
       @if(Getter.status==Status.Connected){ 
        @foreach (var user in Getter.CopyTasks)
        {
            string url= "/JobList/"+user.Key+"/-1";

            <li class="nav-item px-1">
                <NavLink class="nav-link" href="@url" @onclick="()=>{selectedUser=user.Key;selections[0]=-1;}">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @user.Key
                </NavLink>
                @if(user.Key==selectedUser){
                    <ul class="nav-list ">
                        @{wrap(user.Value.Heirachy,user.Key,user.Value);}
                    </ul>
                }
            </li>
            
        }}
       @*  <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li> *@
         
    </ul>
</div>

@code {
    private string selectedUser = "";
    private int[] selections = Enumerable.Range(-50,20).ToArray();
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        //We set the group from the url so that the subnav can be show even when a user hasn't clicked on a group
        selectedUser = UriHelper.Uri.Split('/')[3];
        //TODO: this shoudl really only triger when the sie of the mian dictionary gets longer
        Getter.newData += StateHasChanged;
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
